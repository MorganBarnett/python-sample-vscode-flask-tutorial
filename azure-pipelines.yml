# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python27:
      python.version: '2.7'
#    Python35:
#      python.version: '3.5'
#    Python36:
#      python.version: '3.6'
    Python37:
      python.version: '3.7'

name: 'Legacy_Application v$(Date:yyyy-MM-dd).$(Rev:r)'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- script: echo '$(Build.BuildNumber)' # outputs customized build number like project_def_master_20200828.1
